<?php

/**
 * @file
 * template.php
 */

/*function cgf_bootstrap_menu_tree__secondary(&$variables) {
  return '<ul>' . $variables['tree'] . '</ul>';
}
*/

function cgf_bootstrap_preprocess_page(&$variables) {
	
	
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['content_column_class'] = ' class="col-xs-6"';
  }
  elseif (!empty($variables['page']['sidebar_first']) || !empty($variables['page']['sidebar_second'])) {
    $variables['content_column_class'] = ' class="col-xs-9"';
  }
  else {
    $variables['content_column_class'] = ' class="col-xs-12"';
  }

  // Primary nav.
  $variables['primary_nav'] = FALSE;
  if ($variables['main_menu']) {
    // Build links.
    $variables['primary_nav'] = menu_tree(variable_get('menu_main_links_source', 'main-menu'));
    // Provide default theme wrapper function.
    $variables['primary_nav']['#theme_wrappers'] = array('menu_tree__primary');
  }

  // Secondary nav.
  $variables['secondary_nav'] = FALSE;
  if ($variables['secondary_menu']) {
    // Build links.
    $variables['secondary_nav'] = menu_tree(variable_get('menu_secondary_links_source', 'user-menu'));
    // Provide default theme wrapper function.
    $variables['secondary_nav']['#theme_wrappers'] = array('menu_tree__secondary');
  }

  $variables['navbar_classes_array'] = array('navbar');

  if (theme_get_setting('bootstrap_navbar_position') !== '') {
    $variables['navbar_classes_array'][] = 'navbar-' . theme_get_setting('bootstrap_navbar_position');
  }
  else {
    $variables['navbar_classes_array'][] = 'container';
  }
  if (theme_get_setting('bootstrap_navbar_inverse')) {
    $variables['navbar_classes_array'][] = 'navbar-inverse';
  }
  else {
    $variables['navbar_classes_array'][] = 'navbar-default';
  }
}


function cgf_bootstrap_bootstrap_search_form_wrapper($variables) {
  $output = '<div class="input-group">';
  $output .= $variables['element']['#children'];
  $output .= '<span class="input-group-btn">';
  $output .= '<button type="submit" class="btn btn-default">';
  // We can be sure that the font icons exist in CDN.
  if (1){//theme_get_setting('bootstrap_cdn')) {
    $output .= _bootstrap_icon('search');
  }
  else {
    $output .= t('Search');
  }
  $output .= '</button>';
  $output .= '</span>';
  $output .= '</div>';
  return $output;
}


function cgf_bootstrap_theme() {
  $items = array();
  // create custom user-login.tpl.php
  $items['user_login'] = array(
  'render element' => 'form',
  'path' => drupal_get_path('theme', 'cgf_bootstrap') . '/templates',
  'template' => 'user-login',
  'preprocess functions' => array(
  'cgf_bootstrap_preprocess_user_login'
  ),
 );
    $items['contact'] = array(
  'render element' => 'form',
  'path' => drupal_get_path('theme', 'cgf_bootstrap') . '/templates',
  'template' => 'contact',
  'preprocess functions' => array(
  'cgf_bootstrap_preprocess_contact'
  ),
  ); 
 
return $items;
}

function cgf_bootstrap_preprocess_user_login(&$vars) {
	//var_dump($vars); 
  $vars['intro_text'] = t('This is my awesome login form');
}


function cgf_bootstrap_preprocess_table(&$vars) {
  $vars['attributes']['class'][] = 'table table-striped';
}

